{"ast":null,"code":"/**\n * @const  {AsyncFetch} Async Function\n * @param  {url} String URL to Fetch Resource\n * @const  {urlFetch} Object Promise from Fetch API\n * @return {Object|Array} if http.status 200 return JSON default An Array\n */\nconst AsyncFetch = async url => {\n  const urlFetch = await fetch(url);\n  return urlFetch.status === 200 ? await urlFetch.json() : [];\n};\n/**\n * default module Export\n * @const {AsyncFetch} \n */\n\n\nexport default AsyncFetch;","map":{"version":3,"sources":["/home/gryus/React Js/PROperty/src/api/AsyncFetch.js"],"names":["AsyncFetch","url","urlFetch","fetch","status","json"],"mappings":"AAAA;;;;;;AAMA,MAAMA,UAAU,GAAG,MAAOC,GAAP,IAAe;AAC9B,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,SAAOC,QAAQ,CAACE,MAAT,KAAoB,GAApB,GACH,MAAMF,QAAQ,CAACG,IAAT,EADH,GACqB,EAD5B;AAEH,CAJD;AAMA;;;;;;AAIA,eAAeL,UAAf","sourcesContent":["/**\n * @const  {AsyncFetch} Async Function\n * @param  {url} String URL to Fetch Resource\n * @const  {urlFetch} Object Promise from Fetch API\n * @return {Object|Array} if http.status 200 return JSON default An Array\n */\nconst AsyncFetch = async (url) => {\n    const urlFetch = await fetch(url)\n    return urlFetch.status === 200 ? \n        await urlFetch.json() : [] \n}\n\n/**\n * default module Export\n * @const {AsyncFetch} \n */\nexport default AsyncFetch"]},"metadata":{},"sourceType":"module"}